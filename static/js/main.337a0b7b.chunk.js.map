{"version":3,"sources":["api/index.js","store/actions.js","components/login/validationSchema.js","components/login/login.js","components/signUp/validationSchema.js","components/signUp/signUp.js","components/main/Main.js","components/app/app.js","store/reducer.js","index.js"],"names":["axios","defaults","baseURL","signUp","a","username","email","password","post","user","alert","login","logInAction","type","profile","logOutAction","validationSchema","Yup","required","matches","initialValues","connect","state","actions","props","history","onSubmit","values","push","className","htmlFor","Item","name","id","placeholder","size","suffix","MailOutlined","Password","htmlType","disabled","to","max","UserOutlined","loading","shape","useEffect","App","path","exact","component","Main","SignUp","Login","initState","reducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.337a0b7b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://conduit.productionready.io/api/';\r\n\r\n/* запрос на регистрацию */\r\nexport const signUp = async ({ username, email, password }) => {\r\n  try {\r\n    await axios.post('/users', {\r\n      user: {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n    alert('Вы успешно зарегистрированы');\r\n  } catch (error) {\r\n    alert('Такой пользователь существует');\r\n  }\r\n};\r\n\r\n/* запрос на авторизацию */\r\nexport const login = ({ email, password }) => axios.post('/users/login', {\r\n  user: {\r\n    email,\r\n    password,\r\n  },\r\n});\r\n\r\n","// import axios from 'axios';\r\n\r\n/* запрос на регистрацию\r\nexport const signUp = async ({ username, email, password }) => {\r\n  try {\r\n    await axios.post('/users', {\r\n      user: {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n  } catch (error) {\r\n    alert('Такой пользователь существует');\r\n  }\r\n};\r\n */\r\n\r\n/* запрос на авторизацию \r\nexport const login = ({ email, password }) => axios.post('/users/login', {\r\n  user: {\r\n    email,\r\n    password,\r\n  },\r\n});\r\n*/\r\n\r\nexport const logInAction = (email, password) => ({\r\n  type: 'LOGIN',\r\n  profile: { email, password },\r\n});\r\n\r\n/* выйти из профиля */\r\nexport const logOutAction = () => ({ type: 'LOGOUT' });\r\n","import * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object({\r\n  email: Yup.string().email('Неккоретный email').required('Пожалуйста, введите почту'),\r\n  password: Yup.string()\r\n    .matches(\r\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=(.*[a-zA-Z]){4}).{8,20}$/,\r\n      'Введите от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\r\n    )\r\n    .required('Пожалуйста, введите пароль'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\r\n// import { useDispatch } from 'react-redax';\r\nimport { Formik } from 'formik';\r\nimport { Form, Input, SubmitButton } from 'formik-antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../api/index';\r\nimport * as actions from '../../store/actions';\r\n\r\n// import './SubmitForm.scss';\r\n\r\nimport validationSchema from './validationSchema';\r\n\r\n/* поля, которые отправляются на сервер */\r\nconst initialValues = {\r\n  password: '',\r\n  email: '',\r\n};\r\n\r\nconst Login = (props) => {\r\n  const { history, logInAction } = props;\r\n\r\n  const onSubmit = async (values) => {\r\n    const { email, password } = values;\r\n    logInAction(email, password);\r\n    try {\r\n      await login(values);\r\n      await logInAction(email, password);\r\n      values.login = true; \r\n      history.push('/');\r\n    } catch (err) {\r\n      alert('Неправильный логин или пароль');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik onSubmit={onSubmit} initialValues={initialValues} validationSchema={validationSchema}>\r\n      <Form className=\"form\">\r\n        <h2 className=\"header\">Login</h2>\r\n        <div>\r\n          <label htmlFor=\"email\">\r\n            Почта\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"email\">\r\n            <Input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"my@mail.ru\"\r\n              size=\"large\"\r\n              suffix={<MailOutlined />}\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">\r\n            Пароль\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"password\">\r\n            <Input.Password\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"My-password-123\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"formButtonsContainer\">\r\n          <SubmitButton htmlType=\"submit\" disabled={false} size=\"large\" className=\"button\">\r\n            Войти\r\n          </SubmitButton>\r\n        </div>\r\n        <Link to=\"/signUp\">Регистрация</Link>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state,\r\n});\r\n\r\nexport default connect(mapStateToProps, actions)(Login);\r\n","import * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object({\r\n  username: Yup.string()\r\n    .max(50, 'Имя должно содержать не более 50 символов')\r\n    .required('Пожалуйста, введите имя'),\r\n  password: Yup.string()\r\n    .matches(\r\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=(.*[a-zA-Z]){4}).{8,20}$/,\r\n      'Введите от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\r\n    )\r\n    .required('Пожалуйста, введите пароль'),\r\n  email: Yup.string().email('Неккоретный email').required('Пожалуйста, введите почту'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Formik } from 'formik';\r\nimport { Form, Input, SubmitButton } from 'formik-antd';\r\nimport { MailOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { signUp } from '../../api/index';\r\nimport * as actions from '../../store/actions';\r\n\r\n// import { connect } from 'react-redux';\r\n\r\nimport './signUp.scss';\r\n\r\nimport validationSchema from './validationSchema';\r\n\r\n/* поля, которые отправляются на сервер */\r\nconst initialValues = {\r\n  username: '',\r\n  password: '',\r\n  email: '',\r\n};\r\n\r\nconst SignUp = (props) => {\r\n  const { history } = props;\r\n  const onSubmit = async (values) => {\r\n    await signUp(values);\r\n    history.push('/login');\r\n  };\r\n\r\n  return (\r\n    <Formik onSubmit={onSubmit} initialValues={initialValues} validationSchema={validationSchema}>\r\n      <Form className=\"form\">\r\n        <h2 className=\"header\">Форма регистрации</h2>\r\n        <div>\r\n          <label htmlFor=\"username\">\r\n            Имя\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"username\">\r\n            <Input\r\n              id=\"username\"\r\n              name=\"username\"\r\n              placeholder=\"Алексей\"\r\n              size=\"large\"\r\n              suffix={<UserOutlined />}\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">\r\n            Почта\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          {/* <span className=\"errorEmail\">{errorMailExists}</span> */}\r\n          <Form.Item name=\"email\">\r\n            <Input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"my@mail.ru\"\r\n              size=\"large\"\r\n              suffix={<MailOutlined />}\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">\r\n            Пароль\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"password\">\r\n            <Input.Password\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"My-password-123\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"formButtonsContainer\">\r\n          <SubmitButton\r\n            loading={false}\r\n            disabled={false}\r\n            size=\"large\"\r\n            shape=\"round\"\r\n            className=\"button\"\r\n          >\r\n            Зарегистрироваться\r\n          </SubmitButton>\r\n        </div>\r\n        <Link to=\"/login\">Login</Link>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state,\r\n});\r\n\r\nexport default connect(mapStateToProps, actions)(SignUp);\r\n","import React, { useEffect } from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Form, SubmitButton } from 'formik-antd';\r\nimport { connect } from 'react-redux';\r\nimport './Main.scss';\r\nimport * as actions from '../../store/actions';\r\n\r\n/* поля, которые отправляются на сервер */\r\nconst initialValues = {\r\n  name: '',\r\n  password: '',\r\n  email: '',\r\n};\r\n\r\nconst Main = (props) => {\r\n  const { user, history, logOutAction} = props;\r\n  useEffect(() => {\r\n    if (!user.login) {\r\n      history.push('/login');\r\n    }\r\n  });\r\n  const onSubmit = () => {\r\n    logOutAction();\r\n  };\r\n  return (\r\n    <div>\r\n      <Formik onSubmit={onSubmit} initialValues={initialValues}>\r\n        <Form className=\"form\">\r\n          <h2 className=\"header\">Привет !</h2>\r\n          <h3 className=\"header\">{user.email}</h3>\r\n          <div className=\"formButtonsContainer\">\r\n            <SubmitButton \r\n              disabled={false} \r\n              size=\"large\" \r\n              className=\"button\">\r\n                Выход\r\n            </SubmitButton>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state,\r\n});\r\n\r\nexport default connect(mapStateToProps, actions)(Main);\r\n","import React from 'react';\r\nimport Login from '../login/login';\r\nimport SignUp from '../signUp/signUp';\r\nimport Main from '../main/Main';\r\nimport './app.scss';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\n\r\nconst App = () => (\r\n  <HashRouter>\r\n    <div className=\"App\">\r\n      <Route path=\"/\" exact component={Main} />\r\n      <Route path=\"/signUp\" component={SignUp} />\r\n      <Route path=\"/login\" component={Login} />\r\n    </div>\r\n  </HashRouter>\r\n);\r\n\r\nexport default App;\r\n","const initState = {\r\n  login: false,\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return { ...state, ...action.profile, login: true };\r\n    case 'SIGNUP':\r\n      return { ...state, ...action.profile };\r\n    case 'LOGOUT':\r\n      return { ...state, login: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.scss';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport App from './components/app/app';\nimport reducer from './store/reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}