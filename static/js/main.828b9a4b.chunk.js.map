{"version":3,"sources":["api/Index.js","store/actions.js","components/login/ValidationSchema.js","components/login/Login.js","components/signUp/ValidationSchema.js","components/signUp/SignUp.js","components/main/Main.js","components/app/App.js","store/reducer.js","index.js"],"names":["axios","defaults","baseURL","signUp","a","username","email","password","post","user","alert","login","logInAction","type","profile","logOutAction","validationSchema","Yup","required","matches","initialValues","connect","state","actions","props","history","onSubmit","values","userLogin","push","className","htmlFor","Item","name","id","placeholder","size","suffix","MailOutlined","Password","htmlType","disabled","to","max","SignUp","UserOutlined","loading","useEffect","App","path","exact","component","Main","Login","initState","reducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"odAEAA,IAAMC,SAASC,QAAU,0CAGlB,IAAMC,EAAM,uCAAG,iCAAAC,EAAA,6DAASC,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,MAAOC,EAA1B,EAA0BA,SAA1B,kBAEZP,IAAMQ,KAAK,SAAU,CACzBC,KAAM,CACJJ,WACAC,QACAC,cANc,OASlBG,MAAM,4JATY,gDAWlBA,MAAM,wKAXY,yDAAH,sDAgBNC,EAAQ,SAAC,GAAD,IAAGL,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAAyBP,IAAMQ,KAAK,eAAgB,CACvEC,KAAM,CACJH,QACAC,eCxBSK,EAAc,SAACN,EAAOC,GAAR,MAAsB,CAC/CM,KAAM,QACNC,QAAS,CAAER,QAAOC,cAIPQ,EAAe,iBAAO,CAAEF,KAAM,W,QCM5BG,EAVUC,IAAW,CAClCX,MAAOW,MAAaX,MAAM,4EAAqBY,SAAS,2IACxDX,SAAUU,MACPE,QACC,6DACA,2WAEDD,SAAS,mJCGRE,EAAgB,CACpBb,SAAU,GACVD,MAAO,IA4EMe,eAJS,SAACC,GAAD,MAAY,CAClCb,KAAMa,KAGgCC,EAAzBF,EAzED,SAACG,GAAW,IAChBC,EAAyBD,EAAzBC,QAASb,EAAgBY,EAAhBZ,YAEXc,EAAQ,uCAAG,WAAOC,GAAP,mBAAAvB,EAAA,6DACPE,EAAoBqB,EAApBrB,MAAOC,EAAaoB,EAAbpB,SACTqB,EAAYD,EAFH,kBAIPhB,EAAMgB,GAJC,uBAKPf,EAAYN,EAAOC,GALZ,OAMbqB,EAAUjB,OAAQ,EAClBc,EAAQI,KAAK,KAPA,kDASbnB,MAAM,mKATO,0DAAH,sDAad,OACE,kBAAC,IAAD,CAAQgB,SAAUA,EAAUN,cAAeA,EAAeJ,iBAAkBA,GAC1E,kBAAC,IAAD,CAAMc,UAAU,QACd,wDACA,6BACE,2BAAOC,QAAQ,SAAf,iCAEE,0BAAMD,UAAU,iBAAhB,OAEF,kBAAC,IAAKE,KAAN,CAAWC,KAAK,SACd,kBAAC,IAAD,CACEC,GAAG,QACHD,KAAK,QACLE,YAAY,aACZC,KAAK,QACLC,OAAQ,kBAACC,EAAA,EAAD,UAId,6BACE,2BAAOP,QAAQ,YAAf,uCAEE,0BAAMD,UAAU,iBAAhB,OAEF,kBAAC,IAAKE,KAAN,CAAWC,KAAK,YACd,kBAAC,IAAMM,SAAP,CACEL,GAAG,WACHD,KAAK,WACLE,YAAY,kBACZC,KAAK,YAIX,yBAAKN,UAAU,wBACb,kBAAC,IAAD,CAAcU,SAAS,SAASC,UAAU,EAAOL,KAAK,QAAQN,UAAU,UAAxE,mCAIF,yBAAKA,UAAU,iBACb,kBAAC,IAAD,CAAMY,GAAG,WAAT,4E,SCzDK1B,EAbUC,IAAW,CAClCZ,SAAUY,MACP0B,IAAI,GAAI,kNACRzB,SAAS,+HACZX,SAAUU,MACPE,QACC,6DACA,2WAEDD,SAAS,iJACZZ,MAAOW,MAAaX,MAAM,4EAAqBY,SAAS,6ICApDE,EAAgB,CACpBf,SAAU,GACVE,SAAU,GACVD,MAAO,IA8EMsC,EA3EA,SAACpB,GAAW,IACjBC,EAAYD,EAAZC,QACFC,EAAQ,uCAAG,WAAOC,GAAP,SAAAvB,EAAA,sEACTD,EAAOwB,GADE,OAEfF,EAAQI,KAAK,UAFE,2CAAH,sDAKd,OACE,kBAAC,IAAD,CAAQH,SAAUA,EAAUN,cAAeA,EAAeJ,iBAAkBA,GAC1E,kBAAC,IAAD,CAAMc,UAAU,QACd,wBAAIA,UAAU,UAAd,qGACA,6BACE,2BAAOC,QAAQ,YAAf,qBAEE,0BAAMD,UAAU,iBAAhB,OAEF,kBAAC,IAAKE,KAAN,CAAWC,KAAK,YACd,kBAAC,IAAD,CACEC,GAAG,WACHD,KAAK,WACLE,YAAY,6CACZC,KAAK,QACLC,OAAQ,kBAACQ,EAAA,EAAD,UAId,6BACE,2BAAOd,QAAQ,SAAf,iCAEE,0BAAMD,UAAU,iBAAhB,OAEF,kBAAC,IAAKE,KAAN,CAAWC,KAAK,SACd,kBAAC,IAAD,CACEC,GAAG,QACHD,KAAK,QACLE,YAAY,aACZC,KAAK,QACLC,OAAQ,kBAACC,EAAA,EAAD,UAId,6BACE,2BAAOP,QAAQ,YAAf,uCAEE,0BAAMD,UAAU,iBAAhB,OAEF,kBAAC,IAAKE,KAAN,CAAWC,KAAK,YACd,kBAAC,IAAMM,SAAP,CACEL,GAAG,WACHD,KAAK,WACLE,YAAY,kBACZC,KAAK,YAIX,yBAAKN,UAAU,wBACb,kBAAC,IAAD,CAAcgB,SAAS,EAAOL,UAAU,EAAOL,KAAK,QAAQN,UAAU,UAAtE,iHAIF,yBAAKA,UAAU,iBACb,mKACA,kBAAC,IAAD,CAAMY,GAAG,UAAT,sCCxEJtB,EAAgB,CACpBa,KAAM,GACN1B,SAAU,GACVD,MAAO,IA0CMe,eAJS,SAACC,GAAD,MAAY,CAClCb,KAAMa,KAGgCC,EAAzBF,EAvCF,SAACG,GAAW,IACff,EAAgCe,EAAhCf,KAAMgB,EAA0BD,EAA1BC,QAASV,EAAiBS,EAAjBT,aACvBgC,qBAAU,WACHtC,EAAKE,OACRc,EAAQI,KAAK,aAMjB,OACE,6BACE,kBAAC,IAAD,CAAQH,SALK,WACfX,KAI8BK,cAAeA,GACzC,kBAAC,IAAD,CAAMU,UAAU,QACd,wBAAIA,UAAU,UAAd,0CACA,wBAAIA,UAAU,UAAUrB,EAAKH,OAC7B,yBAAKwB,UAAU,wBACb,kBAAC,IAAD,CAAcW,UAAU,EAAOL,KAAK,QAAQN,UAAU,UAAtD,yCCdGkB,G,OAVH,kBACV,kBAAC,IAAD,KACE,yBAAKlB,UAAU,OACb,kBAAC,IAAD,CAAOmB,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,UAAUE,UAAWP,IACjC,kBAAC,IAAD,CAAOK,KAAK,SAASE,UAAWE,Q,QCZhCC,EAAY,CAChB3C,OAAO,GAgBM4C,EAbC,WAAgC,IAA/BjC,EAA8B,uDAAtBgC,EAAWE,EAAW,uCAC7C,OAAQA,EAAO3C,MACb,IAAK,QACH,OAAO,uCAAKS,GAAUkC,EAAO1C,SAA7B,IAAsCH,OAAO,IAC/C,IAAK,SACH,OAAO,2BAAKW,GAAUkC,EAAO1C,SAC/B,IAAK,SACH,OAAO,2BAAKQ,GAAZ,IAAmBX,OAAO,IAC5B,QACE,OAAOW,ICHPmC,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YAAYP,EAASE,EAAiBM,YAAgBC,OAEpEC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.828b9a4b.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://conduit.productionready.io/api/';\r\n\r\n/* запрос на регистрацию */\r\nexport const signUp = async ({ username, email, password }) => {\r\n  try {\r\n    await axios.post('/users', {\r\n      user: {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n    alert('Вы успешно зарегистрированы');\r\n  } catch (error) {\r\n    alert('Такой пользователь существует');\r\n  }\r\n};\r\n\r\n/* запрос на авторизацию */\r\nexport const login = ({ email, password }) => axios.post('/users/login', {\r\n  user: {\r\n    email,\r\n    password,\r\n  },\r\n});\r\n","export const logInAction = (email, password) => ({\n  type: 'LOGIN',\n  profile: { email, password },\n});\n\n/* выйти из профиля */\nexport const logOutAction = () => ({ type: 'LOGOUT' });\n","import * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object({\r\n  email: Yup.string().email('Неккоретный email').required('Пожалуйста, введите почту'),\r\n  password: Yup.string()\r\n    .matches(\r\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=(.*[a-zA-Z]){4}).{8,20}$/,\r\n      'Введите от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\r\n    )\r\n    .required('Пожалуйста, введите пароль'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { Form, Input, SubmitButton } from 'formik-antd';\nimport { MailOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../../api/Index';\nimport * as actions from '../../store/actions';\nimport validationSchema from './ValidationSchema';\n\n/* поля, которые отправляются на сервер */\nconst initialValues = {\n  password: '',\n  email: '',\n};\n\nconst Login = (props) => {\n  const { history, logInAction } = props;\n\n  const onSubmit = async (values) => {\n    const { email, password } = values;\n    const userLogin = values;\n    try {\n      await login(values);\n      await logInAction(email, password);\n      userLogin.login = true;\n      history.push('/');\n    } catch (err) {\n      alert('Неправильный логин или пароль');\n    }\n  };\n\n  return (\n    <Formik onSubmit={onSubmit} initialValues={initialValues} validationSchema={validationSchema}>\n      <Form className=\"form\">\n        <h2>Вход</h2>\n        <div>\n          <label htmlFor=\"email\">\n            Почта\n            <span className=\"required-star\"> *</span>\n          </label>\n          <Form.Item name=\"email\">\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"my@mail.ru\"\n              size=\"large\"\n              suffix={<MailOutlined />}\n            />\n          </Form.Item>\n        </div>\n        <div>\n          <label htmlFor=\"password\">\n            Пароль\n            <span className=\"required-star\"> *</span>\n          </label>\n          <Form.Item name=\"password\">\n            <Input.Password\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"My-password-123\"\n              size=\"large\"\n            />\n          </Form.Item>\n        </div>\n        <div className=\"formButtonsContainer\">\n          <SubmitButton htmlType=\"submit\" disabled={false} size=\"large\" className=\"button\">\n            Войти\n          </SubmitButton>\n        </div>\n        <div className=\"linkContainer\">\n          <Link to=\"/signUp\">Регистрация</Link>\n        </div>\n      </Form>\n    </Formik>\n  );\n};\n\nLogin.propTypes = {\n  history: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string, PropTypes.object]),\n  ).isRequired,\n  logInAction: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state,\n});\n\nexport default connect(mapStateToProps, actions)(Login);\n","import * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object({\r\n  username: Yup.string()\r\n    .max(50, 'Имя должно содержать не более 50 символов')\r\n    .required('Пожалуйста, введите имя'),\r\n  password: Yup.string()\r\n    .matches(\r\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=(.*[a-zA-Z]){4}).{8,20}$/,\r\n      'Введите от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\r\n    )\r\n    .required('Пожалуйста, введите пароль'),\r\n  email: Yup.string().email('Неккоретный email').required('Пожалуйста, введите почту'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { Form, Input, SubmitButton } from 'formik-antd';\nimport { MailOutlined, UserOutlined } from '@ant-design/icons';\nimport { Link } from 'react-router-dom';\nimport { signUp } from '../../api/Index';\n// import './SignUp.scss';\n\nimport validationSchema from './ValidationSchema';\n\n/* поля, которые отправляются на сервер */\nconst initialValues = {\n  username: '',\n  password: '',\n  email: '',\n};\n\nconst SignUp = (props) => {\n  const { history } = props;\n  const onSubmit = async (values) => {\n    await signUp(values);\n    history.push('/login');\n  };\n\n  return (\n    <Formik onSubmit={onSubmit} initialValues={initialValues} validationSchema={validationSchema}>\n      <Form className=\"form\">\n        <h2 className=\"header\">Форма регистрации</h2>\n        <div>\n          <label htmlFor=\"username\">\n            Имя\n            <span className=\"required-star\"> *</span>\n          </label>\n          <Form.Item name=\"username\">\n            <Input\n              id=\"username\"\n              name=\"username\"\n              placeholder=\"Алексей\"\n              size=\"large\"\n              suffix={<UserOutlined />}\n            />\n          </Form.Item>\n        </div>\n        <div>\n          <label htmlFor=\"email\">\n            Почта\n            <span className=\"required-star\"> *</span>\n          </label>\n          <Form.Item name=\"email\">\n            <Input\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"my@mail.ru\"\n              size=\"large\"\n              suffix={<MailOutlined />}\n            />\n          </Form.Item>\n        </div>\n        <div>\n          <label htmlFor=\"password\">\n            Пароль\n            <span className=\"required-star\"> *</span>\n          </label>\n          <Form.Item name=\"password\">\n            <Input.Password\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"My-password-123\"\n              size=\"large\"\n            />\n          </Form.Item>\n        </div>\n        <div className=\"formButtonsContainer\">\n          <SubmitButton loading={false} disabled={false} size=\"large\" className=\"button\">\n            Зарегистрироваться\n          </SubmitButton>\n        </div>\n        <div className=\"linkContainer\">\n          <span>Уже зарегистрировались? </span>\n          <Link to=\"/login\">Войти</Link>\n        </div>\n      </Form>\n    </Formik>\n  );\n};\n\nSignUp.propTypes = {\n  history: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string, PropTypes.object]),\n  ).isRequired,\n};\n\nexport default SignUp;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { Form, SubmitButton } from 'formik-antd';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions';\n\n/* поля, которые отправляются на сервер */\nconst initialValues = {\n  name: '',\n  password: '',\n  email: '',\n};\n\nconst Main = (props) => {\n  const { user, history, logOutAction } = props;\n  useEffect(() => {\n    if (!user.login) {\n      history.push('/login');\n    }\n  });\n  const onSubmit = () => {\n    logOutAction();\n  };\n  return (\n    <div>\n      <Formik onSubmit={onSubmit} initialValues={initialValues}>\n        <Form className=\"form\">\n          <h2 className=\"header\">Привет !</h2>\n          <h3 className=\"header\">{user.email}</h3>\n          <div className=\"formButtonsContainer\">\n            <SubmitButton disabled={false} size=\"large\" className=\"button\">\n              Выход\n            </SubmitButton>\n          </div>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\n\nMain.propTypes = {\n  history: PropTypes.objectOf(\n    PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string, PropTypes.object]),\n  ).isRequired,\n  user: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.bool])).isRequired,\n  logOutAction: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state,\n});\n\nexport default connect(mapStateToProps, actions)(Main);\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Login from '../login/Login';\nimport SignUp from '../signUp/SignUp';\nimport Main from '../main/Main';\nimport './App.scss';\n\nconst App = () => (\n  <HashRouter>\n    <div className=\"App\">\n      <Route path=\"/\" exact component={Main} />\n      <Route path=\"/signUp\" component={SignUp} />\n      <Route path=\"/login\" component={Login} />\n    </div>\n  </HashRouter>\n);\n\nexport default App;\n","const initState = {\r\n  login: false,\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return { ...state, ...action.profile, login: true };\r\n    case 'SIGNUP':\r\n      return { ...state, ...action.profile };\r\n    case 'LOGOUT':\r\n      return { ...state, login: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.scss';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './components/app/App';\r\nimport reducer from './store/reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}