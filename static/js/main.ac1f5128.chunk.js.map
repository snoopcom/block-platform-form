{"version":3,"sources":["api/Index.js","store/actions.js","components/login/ValidationSchema.js","components/login/Login.js","components/signUp/ValidationSchema.js","components/signUp/SignUp.js","components/main/Main.js","components/app/App.js","store/reducer.js","index.js"],"names":["baseUrl","api","axios","create","interceptors","request","use","req","token","localStorage","getItem","userConfig","headers","Authorization","userRequest","a","url","get","response","loginRequest","values","email","password","data","user","post","signUpRequest","username","logAction","createAction","logOutAction","isActive","isInactive","authorization","validationSchema","Yup","required","initialValues","Login","buttonReducer","useSelector","state","dispatch","useDispatch","history","useHistory","onSubmit","setItem","JSON","stringify","push","status","alert","className","htmlFor","Item","name","id","placeholder","size","suffix","MailOutlined","Password","disabled","htmlType","to","max","matches","SignUp","UserOutlined","loading","Main","userReducer","parse","undefined","error","removeItem","App","logAccount","useEffect","path","exact","component","handleActions","actions","action","payload","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ac1f5128.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const baseUrl = 'https://conduit.productionready.io/api/';\n\nexport const api = axios.create();\n\napi.interceptors.request.use((req) => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    const userConfig = req;\n    userConfig.headers.Authorization = `Token ${token}`;\n    return userConfig;\n  }\n  return req;\n});\n\nexport const userRequest = async () => {\n  const url = `${baseUrl}user`;\n  const response = await api.get(url);\n  return response;\n};\n\nexport const loginRequest = async (values) => {\n  const { email, password } = values;\n  const data = {\n    user: {\n      email,\n      password,\n    },\n  };\n\n  const url = `${baseUrl}users/login`;\n  const response = await axios.post(url, data);\n  return response;\n};\n\nexport const signUpRequest = async (values) => {\n  const { username, email, password } = values;\n  const data = {\n    user: {\n      username,\n      email,\n      password,\n    },\n  };\n  const url = `${baseUrl}users`;\n  const response = await axios.post(url, data);\n  return response;\n};\n","import { createAction } from 'redux-actions';\r\nimport { userRequest, loginRequest, signUpRequest } from '../api/Index';\r\n\r\n// Функция createAction принимает тип действия\r\n// (свойство type) и возвращает функцию, принимающую payload\r\nexport const logAction = createAction('LOGIN_USER');\r\nexport const logOutAction = createAction('LOGOUT_USER');\r\n\r\nexport const isActive = createAction('ACTIVE_BUTTON');\r\nexport const isInactive = createAction('OUT_BUTTON');\r\n\r\nexport const getUser = () => async () => {\r\n  const response = await userRequest();\r\n  localStorage.setItem('user', JSON.stringify(response.data.user));\r\n  return response;\r\n};\r\n\r\nexport const authorization = (values) => async () => {\r\n  const response = await loginRequest(values);\r\n  return response;\r\n};\r\n\r\nexport const registration = (values) => async () => {\r\n  const response = await signUpRequest(values);\r\n  return response;\r\n};\r\n","import * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object({\r\n  email: Yup.string().email('Неккоретный email').required('Пожалуйста, введите почту'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Form, Input, SubmitButton } from 'formik-antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  authorization, logAction, isActive, isInactive,\r\n} from '../../store/actions';\r\nimport validationSchema from './ValidationSchema';\r\n\r\n/* поля, которые отправляются на сервер */\r\nconst initialValues = {\r\n  email: '',\r\n  password: '',\r\n};\r\n\r\nconst Login = () => {\r\n  const buttonReducer = useSelector((state) => state.buttonReducer);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async (values) => {\r\n    try {\r\n      dispatch(isActive());\r\n      dispatch(logAction(values));\r\n      const response = await dispatch(authorization(values));\r\n      const { token } = response.data.user;\r\n      localStorage.setItem('token', `${token}`);\r\n      // сделал, чтобы при удалении стореджа и перезагрузке страницы не вылетало со страницы main\r\n      localStorage.setItem('user', JSON.stringify(response.data.user));\r\n      history.push('/');\r\n    } catch (error) {\r\n      if (error.request.status === 422) {\r\n        dispatch(isInactive());\r\n        alert('Неверный логин или пароль');\r\n      }\r\n      if (error.request.status === 0) {\r\n        dispatch(isInactive());\r\n        alert(':( неполадки с сетью');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik onSubmit={onSubmit} initialValues={initialValues} validationSchema={validationSchema}>\r\n      <Form className=\"form\">\r\n        <h2>Вход</h2>\r\n        <div>\r\n          <label htmlFor=\"email\">\r\n            Почта\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"email\">\r\n            <Input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"my@mail.ru\"\r\n              size=\"large\"\r\n              suffix={<MailOutlined />}\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">\r\n            Пароль\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"password\">\r\n            <Input.Password\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"My-password-123\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"formButtonsContainer\">\r\n          <SubmitButton disabled={buttonReducer} htmlType=\"submit\" size=\"large\" className=\"button\">\r\n            Войти\r\n          </SubmitButton>\r\n        </div>\r\n        <div className=\"linkContainer\">\r\n          <Link to=\"/signUp\">Регистрация</Link>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object({\r\n  username: Yup.string()\r\n    .max(50, 'Имя должно содержать не более 50 символов')\r\n    .required('Пожалуйста, введите имя'),\r\n  password: Yup.string()\r\n    .matches(\r\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=(.*[a-zA-Z]){4}).{8,20}$/,\r\n      'Введите от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\r\n    )\r\n    .required('Пожалуйста, введите пароль'),\r\n  email: Yup.string().email('Неккоретный email').required('Пожалуйста, введите почту'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Form, Input, SubmitButton } from 'formik-antd';\r\nimport { MailOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signUpRequest } from '../../api/Index';\r\nimport validationSchema from './ValidationSchema';\r\nimport { isActive, logAction, isInactive } from '../../store/actions';\r\n\r\n/* поля, которые отправляются на сервер */\r\nconst initialValues = {\r\n  username: '',\r\n  password: '',\r\n  email: '',\r\n};\r\n\r\nconst SignUp = () => {\r\n  const buttonReducer = useSelector((state) => state.buttonReducer);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const onSubmit = async (values) => {\r\n    try {\r\n      dispatch(isActive());\r\n      dispatch(logAction(values));\r\n      await signUpRequest(values);\r\n      history.push('/');\r\n      alert('Вы успешно зарегистрировались!');\r\n    } catch (error) {\r\n      if (error.request.status === 422) {\r\n        dispatch(isInactive());\r\n        alert('Такой пользователь уже существует');\r\n      }\r\n      if (error.request.status === 0) {\r\n        dispatch(isInactive());\r\n        alert(':( неполадки с сетью');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik onSubmit={onSubmit} initialValues={initialValues} validationSchema={validationSchema}>\r\n      <Form className=\"form\">\r\n        <h2 className=\"header\">Форма регистрации</h2>\r\n        <div>\r\n          <label htmlFor=\"username\">\r\n            Имя\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"username\">\r\n            <Input\r\n              id=\"username\"\r\n              name=\"username\"\r\n              placeholder=\"Алексей\"\r\n              size=\"large\"\r\n              suffix={<UserOutlined />}\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">\r\n            Почта\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"email\">\r\n            <Input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"my@mail.ru\"\r\n              size=\"large\"\r\n              suffix={<MailOutlined />}\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">\r\n            Пароль\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"password\">\r\n            <Input.Password\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"My-password-123\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"formButtonsContainer\">\r\n          <SubmitButton loading={false} disabled={buttonReducer} size=\"large\" className=\"button\">\r\n            Зарегистрироваться\r\n          </SubmitButton>\r\n        </div>\r\n        <div className=\"linkContainer\">\r\n          <span>Уже зарегистрировались? </span>\r\n          <Link to=\"/login\">Войти</Link>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport { Form, SubmitButton } from 'formik-antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { isInactive, logOutAction } from '../../store/actions';\r\n\r\n/* поля, которые отправляются на сервер */\r\nconst initialValues = {\r\n  name: '',\r\n  password: '',\r\n  email: '',\r\n};\r\n\r\nconst Main = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const userReducer = useSelector((state) => state.userReducer);\r\n\r\n  let { email } = userReducer;\r\n  let data;\r\n\r\n  try {\r\n    data = JSON.parse(localStorage.getItem('user'));\r\n    if (email === undefined) {\r\n      email = data.email;\r\n    }\r\n  } catch (error) {\r\n    if (data === null) {\r\n      history.push('/login');\r\n    }\r\n  }\r\n\r\n  const onSubmit = () => {\r\n    dispatch(isInactive());\r\n    dispatch(logOutAction());\r\n    localStorage.removeItem('token');\r\n    history.push('/login');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Formik onSubmit={onSubmit} initialValues={initialValues}>\r\n        <Form className=\"form\">\r\n          <h2 className=\"header\">Привет !</h2>\r\n          <h3 className=\"header\">{email}</h3>\r\n          <div className=\"formButtonsContainer\">\r\n            <SubmitButton size=\"large\" className=\"button\">\r\n              Выход\r\n            </SubmitButton>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Login from '../login/Login';\nimport SignUp from '../signUp/SignUp';\nimport Main from '../main/Main';\nimport { getUser } from '../../store/actions';\nimport './App.scss';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const logAccount = async () => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      await dispatch(getUser());\n    }\n  };\n\n  useEffect(() => {\n    logAccount();\n  }, []);\n\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/signUp\" exact component={SignUp} />\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/login\" exact component={Login} />\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { handleActions } from 'redux-actions';\r\nimport * as actions from './actions';\r\n\r\nconst userReducer = handleActions(\r\n  {\r\n    [actions.logOutAction]: () => {},\r\n    [actions.logAction]: (state, action) => action.payload,\r\n  },\r\n  {},\r\n);\r\n\r\nconst buttonReducer = handleActions(\r\n  {\r\n    [actions.isActive]: () => true,\r\n    [actions.isInactive]: () => false,\r\n  },\r\n  false,\r\n);\r\n\r\nexport default combineReducers({\r\n  userReducer,\r\n  buttonReducer,\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.scss';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './components/app/App';\r\nimport reducer from './store/reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}