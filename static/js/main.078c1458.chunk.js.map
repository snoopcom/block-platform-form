{"version":3,"sources":["api/Index.js","store/actions.js","components/login/ValidationSchema.js","components/login/Login.js","components/signUp/ValidationSchema.js","components/signUp/SignUp.js","components/main/Main.js","components/app/App.js","store/reducer.js","index.js"],"names":["axios","defaults","baseURL","signUp","a","username","email","password","post","user","alert","login","response","data","localStorage","setItem","token","logInAction","type","payload","logOutAction","validationSchema","Yup","required","initialValues","connect","state","actions","props","history","getItem","console","log","onSubmit","values","userLogin","push","className","htmlFor","Item","name","id","placeholder","size","suffix","MailOutlined","Password","htmlType","disabled","to","max","matches","SignUp","UserOutlined","loading","useEffect","App","path","exact","component","Main","Login","initState","reducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.078c1458.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://conduit.productionready.io/api/';\r\n\r\n// /* получение токена */\r\n// export const getToken = async ({ email, password }) => {\r\n//   const response = await axios.post('/users/login', {\r\n//     user: {\r\n//       email,\r\n//       password,\r\n//     },\r\n//   });\r\n//   const { data } = response;\r\n//   localStorage.setItem('token', data.user.token);\r\n// };\r\n\r\n/* запрос на регистрацию */\r\nexport const signUp = async ({ username, email, password }) => {\r\n  try {\r\n    await axios.post('/users', {\r\n      user: {\r\n        username,\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n    alert('Вы успешно зарегистрированы');\r\n  } catch (error) {\r\n    alert('Такой пользователь существует');\r\n  }\r\n};\r\n\r\n/* запрос на авторизацию */\r\nexport const login = async ({ email, password }) => {\r\n  const response = await axios.post('/users/login', {\r\n    user: {\r\n      email,\r\n      password,\r\n    },\r\n  });\r\n  const { data } = response;\r\n  localStorage.setItem('token', data.user.token);\r\n};\r\n","export const logInAction = (email, password) => ({\r\n  type: 'LOGIN',\r\n  payload: { email, password },\r\n});\r\n\r\n/* выйти из профиля */\r\nexport const logOutAction = () => ({ type: 'LOGOUT' });\r\n","import * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object({\r\n  email: Yup.string().email('Неккоретный email').required('Пожалуйста, введите почту'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport { Form, Input, SubmitButton } from 'formik-antd';\r\nimport { MailOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../api/Index';\r\nimport * as actions from '../../store/actions';\r\nimport validationSchema from './ValidationSchema';\r\n\r\n/* поля, которые отправляются на сервер */\r\nconst initialValues = {\r\n  password: '',\r\n  email: '',\r\n};\r\n\r\nconst Login = (props) => {\r\n  const { history, logInAction } = props;\r\n  const token = localStorage.getItem('token');\r\n\r\n  console.log(token);\r\n\r\n  const onSubmit = async (values) => {\r\n    const { email, password } = values;\r\n    const userLogin = values;\r\n    try {\r\n      await login(values);\r\n      await logInAction(email, password);\r\n      userLogin.login = true;\r\n      history.push('/');\r\n    } catch (err) {\r\n      alert('Неправильный логин или пароль');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik onSubmit={onSubmit} initialValues={initialValues} validationSchema={validationSchema}>\r\n      <Form className=\"form\">\r\n        <h2>Вход</h2>\r\n        <div>\r\n          <label htmlFor=\"email\">\r\n            Почта\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"email\">\r\n            <Input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"my@mail.ru\"\r\n              size=\"large\"\r\n              suffix={<MailOutlined />}\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">\r\n            Пароль\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"password\">\r\n            <Input.Password\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"My-password-123\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"formButtonsContainer\">\r\n          <SubmitButton htmlType=\"submit\" disabled={false} size=\"large\" className=\"button\">\r\n            Войти\r\n          </SubmitButton>\r\n        </div>\r\n        <div className=\"linkContainer\">\r\n          <Link to=\"/signUp\">Регистрация</Link>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  history: PropTypes.objectOf(\r\n    PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string, PropTypes.object]),\r\n  ).isRequired,\r\n  logInAction: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state,\r\n});\r\n\r\nexport default connect(mapStateToProps, actions)(Login);\r\n","import * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object({\r\n  username: Yup.string()\r\n    .max(50, 'Имя должно содержать не более 50 символов')\r\n    .required('Пожалуйста, введите имя'),\r\n  password: Yup.string()\r\n    .matches(\r\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=(.*[a-zA-Z]){4}).{8,20}$/,\r\n      'Введите от 8 до 40 символов, как минимум одна цифра и одна заглавная буква',\r\n    )\r\n    .required('Пожалуйста, введите пароль'),\r\n  email: Yup.string().email('Неккоретный email').required('Пожалуйста, введите почту'),\r\n});\r\n\r\nexport default validationSchema;\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\nimport { Form, Input, SubmitButton } from 'formik-antd';\r\nimport { MailOutlined, UserOutlined } from '@ant-design/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { signUp } from '../../api/Index';\r\nimport validationSchema from './ValidationSchema';\r\n\r\n/* поля, которые отправляются на сервер */\r\nconst initialValues = {\r\n  username: '',\r\n  password: '',\r\n  email: '',\r\n};\r\n\r\nconst SignUp = () => {\r\n  const onSubmit = async (values) => {\r\n    await signUp(values);\r\n  };\r\n\r\n  return (\r\n    <Formik onSubmit={onSubmit} initialValues={initialValues} validationSchema={validationSchema}>\r\n      <Form className=\"form\">\r\n        <h2 className=\"header\">Форма регистрации</h2>\r\n        <div>\r\n          <label htmlFor=\"username\">\r\n            Имя\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"username\">\r\n            <Input\r\n              id=\"username\"\r\n              name=\"username\"\r\n              placeholder=\"Алексей\"\r\n              size=\"large\"\r\n              suffix={<UserOutlined />}\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">\r\n            Почта\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"email\">\r\n            <Input\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"my@mail.ru\"\r\n              size=\"large\"\r\n              suffix={<MailOutlined />}\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">\r\n            Пароль\r\n            <span className=\"required-star\"> *</span>\r\n          </label>\r\n          <Form.Item name=\"password\">\r\n            <Input.Password\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"My-password-123\"\r\n              size=\"large\"\r\n            />\r\n          </Form.Item>\r\n        </div>\r\n        <div className=\"formButtonsContainer\">\r\n          <SubmitButton loading={false} disabled={false} size=\"large\" className=\"button\">\r\n            Зарегистрироваться\r\n          </SubmitButton>\r\n        </div>\r\n        <div className=\"linkContainer\">\r\n          <span>Уже зарегистрировались? </span>\r\n          <Link to=\"/login\">Войти</Link>\r\n        </div>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik } from 'formik';\r\nimport { Form, SubmitButton } from 'formik-antd';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions';\r\n\r\n/* поля, которые отправляются на сервер */\r\nconst initialValues = {\r\n  name: '',\r\n  password: '',\r\n  email: '',\r\n};\r\n\r\nconst Main = (props) => {\r\n  const { user, history, logOutAction } = props;\r\n  console.log(user);\r\n  useEffect(() => {\r\n    if (!user.login) {\r\n      history.push('/login');\r\n    }\r\n  });\r\n  const onSubmit = () => {\r\n    logOutAction();\r\n  };\r\n  return (\r\n    <div>\r\n      <Formik onSubmit={onSubmit} initialValues={initialValues}>\r\n        <Form className=\"form\">\r\n          <h2 className=\"header\">Привет !</h2>\r\n          <h3 className=\"header\">{user.email}</h3>\r\n          <div className=\"formButtonsContainer\">\r\n            <SubmitButton disabled={false} size=\"large\" className=\"button\">\r\n              Выход\r\n            </SubmitButton>\r\n          </div>\r\n        </Form>\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nMain.propTypes = {\r\n  history: PropTypes.objectOf(\r\n    PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string, PropTypes.object]),\r\n  ).isRequired,\r\n  user: PropTypes.objectOf(PropTypes.oneOfType([PropTypes.string, PropTypes.bool])).isRequired,\r\n  logOutAction: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state,\r\n});\r\n\r\nexport default connect(mapStateToProps, actions)(Main);\r\n","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport Login from '../login/Login';\r\nimport SignUp from '../signUp/SignUp';\r\nimport Main from '../main/Main';\r\nimport './App.scss';\r\n\r\nconst App = () => (\r\n  <HashRouter>\r\n    <div className=\"App\">\r\n      <Route path=\"/\" exact component={Main} />\r\n      <Route path=\"/signUp\" component={SignUp} />\r\n      <Route path=\"/login\" component={Login} />\r\n    </div>\r\n  </HashRouter>\r\n);\r\n\r\nexport default App;\r\n","const initState = {\r\n  login: false,\r\n};\r\n\r\nconst reducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return { ...state, ...action.payload, login: true };\r\n    case 'LOGOUT':\r\n      return { ...state, login: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './index.scss';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport App from './components/app/App';\r\nimport reducer from './store/reducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}